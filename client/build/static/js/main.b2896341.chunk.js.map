{"version":3,"sources":["svg/clip.svg","components/Form/Input.js","components/Form/Textarea.js","components/Form/AttachFile.js","components/Form/Submit.js","redux/actions.js","components/Form/Form.js","components/Header/Header.js","App.js","serviceWorker.js","redux/store.js","redux/reducers.js","index.js"],"names":["module","exports","Input","value","id","type","action","placeholder","useState","val","setVal","isActive","setActive","dispatch","useDispatch","htmlFor","className","name","onFocus","_","onBlur","onChange","e","target","Textarea","rows","data-test","AttachFile","formats","maxSize","maxCount","err","setErr","MAX_SIZE","MAX_COUNT","data-max-size","data-max-count","accept","join","multiple","hasOverflow","f","map","call","files","i","size","length","forEach","slice","src","Clip","alt","onClick","document","getElementById","Submit","setSenderNameAction","payload","setSenderEmailAction","setRecipicientNameAction","setRecipicientEmailAction","setSubjectAction","setMessageAction","addFilesAction","Form","APIResponse","setAPI","form","useStore","getState","store","validateForm","preventDefault","errors","querySelectorAll","el","classList","remove","senderName","push","senderMail","recipicientMail","recipicientName","subject","message","n","querySelector","add","sendData","JSON","stringify","senderEmail","recipicientEmail","url","data","a","fetch","method","headers","body","useEffect","then","res","text","onSubmit","Header","App","Boolean","window","location","hostname","match","middlewares","ReduxThunk","createStore","state","applyMiddleware","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.b2896341.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clip.86d1bbc5.svg\";","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nexport const Input = ({ value, id, type, action, placeholder }) => {\n  const [val, setVal] = useState(value);\n  const [isActive, setActive] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    dispatch(action( e.target.value ));\n    setVal(e.target.value);\n  }\n\n  return(\n    <label htmlFor={id} className=\"form__label\">\n      <input \n        id={ id } \n        name={ id } \n        type={ type }\n        value={ val } \n        className={`form__input ${isActive ? 'form__input--active' : ''} ${val !== '' ? 'form__input--not-empty' : ''}`}\n        onFocus={ _ => setActive(false) }\n        onBlur={ _ => setActive(false) }\n        onChange={ e => onChange(e) }\n      />\n      <span className=\"form__input-placeholder\">{placeholder}</span>\n      <span className=\"form__input-border\"></span>\n    </label>\n  )\n};\n\nInput.propTypes = {\n  value: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n  action: PropTypes.func\n};","import React, { useState  } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nexport const Textarea = ({ value, id, placeholder, action }) => {\n  const [val, setVal] = useState(value);\n  const [isActive, setActive] = useState(false);\n  \n  const dispatch = useDispatch();\n  \n  const onChange = e => {\n    dispatch(action( e.target.value ));\n    setVal(e.target.value);\n  }\n\n  return(\n    <label htmlFor={id} className=\"form__label\">\n      <textarea \n        id={id} \n        name={id} \n        className={`form__textarea ${isActive ? 'form__textarea--active' : ''} ${val !== '' ? 'form__textarea--not-empty' : ''}`}\n        onFocus={_ => setActive(false)}\n        onBlur={_ => setActive(false)}\n        onChange={ e => onChange(e) }\n        rows=\"8\"\n        data-test=\"textarea\"\n      />\n      <span className=\"form__textarea-placeholder\">{placeholder}</span>\n      <span className=\"form__textarea-border\"></span>\n    </label>\n  )\n}\n\nTextarea.propTypes = {\n  value: PropTypes.string,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n  action: PropTypes.func\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Clip from '../../svg/clip.svg';\nimport { useDispatch } from 'react-redux';\n\nexport const AttachFile = ({ formats, maxSize, maxCount, value, action }) => {\n  const [val, setVal] = useState(value);\n  const [err, setErr] = useState('');\n\n  const MAX_SIZE = maxSize * 1024 ** 2;\n  const MAX_COUNT = maxCount;\n\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    let hasOverflow = false;\n\n    let f = [].map.call(e.target.files, i => {\n      return {\n        name: i.name,\n        size: i.size,\n        type: i.type     \n      }\n    });\n\n    if(f.length > MAX_COUNT) {\n      hasOverflow = true; \n      setErr(`Max amount of files is ${MAX_COUNT}`);\n    }\n\n    f.forEach(i => {\n      if(i.size > MAX_SIZE) {\n        hasOverflow = true;\n        setErr(`File ${i.name.slice(0, 10) + '...'} is larger ${ maxSize }mb`);\n      }\n    });\n    \n    if(hasOverflow) return;\n    else {\n      setErr();\n      dispatch(action(f));\n      setVal(f);\n    }\n  };\n\n  const clearValue = _ => {\n    document.getElementById('file').value = '';\n    dispatch(action([]));\n    setVal([]);\n  }\n\n  return(\n    <div className=\"form__attach-wrapper\">\n      <label className=\"form__label--file\">\n        <input \n          id=\"file\" \n          name=\"file\" \n          type=\"file\"\n          className=\"form__file\"\n          data-max-size={MAX_SIZE}\n          data-max-count={MAX_COUNT}\n          accept={ formats.join(',') }\n          multiple\n          onChange={ e => onChange(e) }\n        />\n        <img src={Clip} alt=\"clip\" className=\"form__file-img\"/>\n        <span className=\"form__file-text\">{val.length > 0 ? `${val.length} file(s)` : 'Attach file'}</span>\n        </label>\n        \n        { val.length > 0 ? <span className=\"form__file-clear\" onClick={ _ => clearValue() }>&times;</span> : '' }\n\n        { err ? <span className=\"form__file-err\">{err}</span> : '' }\n    </div>\n  )\n}\n\nAttachFile.propTypes = {\n  formats : PropTypes.array, \n  maxSize : PropTypes.number, \n  maxCount : PropTypes.number, \n  value : PropTypes.array, \n  action : PropTypes.func\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Submit = ({ value }) => {\n  return(\n    <input \n      id=\"submit\" \n      name=\"submit\" \n      type=\"submit\"\n      className=\"form__submit\"\n      value={value}\n    />\n  )\n}\n\nSubmit.propTypes = {\n  value: PropTypes.string\n};","export const setSenderNameAction = payload => ({\n  type: 'SET_SENDER_NAME',\n  payload\n});\n\nexport const setSenderEmailAction = payload => ({\n  type: 'SET_SENDER_EMAIL',\n  payload\n}); \n\nexport const setRecipicientNameAction = payload => ({\n  type: 'SET_RECIPICIENT_NAME',\n  payload\n});\n\nexport const setRecipicientEmailAction = payload => ({\n  type: 'SET_RECIPICIENT_EMAIL',\n  payload\n}); \n\nexport const setSubjectAction = payload => ({\n  type: 'SET_SUBJECT',\n  payload\n}); \n\nexport const setMessageAction = payload => ({\n  type: 'SET_MESSAGE',\n  payload\n}); \n\nexport const addFilesAction = payload => ({\n  type: 'ADD_FILES',\n  payload\n}); ","import React, {useState, useEffect} from 'react';\n\nimport {Input} from './Input';\nimport {Textarea} from './Textarea';\nimport {AttachFile} from './AttachFile';\nimport {Submit} from './Submit';\n\nimport { useStore } from 'react-redux';\nimport { setSenderNameAction, setSenderEmailAction, setRecipicientNameAction, setRecipicientEmailAction, setSubjectAction, setMessageAction, addFilesAction } from '../../redux/actions';\n\nexport const Form = _ => {\n  const [APIResponse, setAPI] = useState('');\n  const form = useStore().getState().form;\n  const store = useStore();\n\n  const validateForm = e => {\n    e.preventDefault();\n    \n    let errors = [];\n    let form = store.getState().form; \n\n    [ ...document.querySelectorAll('.form__input--has-error') ].forEach(\n      el => el.classList.remove('form__input--has-error')\n    );\n\n    if(form.senderName === '') \n      errors.push('sender_name');\n\n    if(form.senderMail === '' || form.senderMail === form.recipicientMail) \n      errors.push('sender_email');\n\n    if(form.recipicientName === '') \n      errors.push('recipicient_name');\n\n    if(form.recipicientMail === '' || form.recipicientMail === form.senderMail) \n      errors.push('recipicient_email');\n\n    if(form.subject === '') \n      errors.push('subject');\n\n    if(form.message === '') \n      errors.push('message');\n    \n    if(errors.length > 0) {\n      errors.forEach(\n        n => { document.querySelector(`[name=\"${n}\"]`).classList.add('form__input--has-error') \n      })\n      return false;\n    }\n\n    let body = JSON.stringify({\n      senderName: form.senderName, \n      senderEmail: form.senderMail, \n      recipicientName: form.recipicientName, \n      recipicientEmail: form.recipicientMail, \n      subject: form.subject, \n      message: form.message, \n      files: form.files\n    });\n\n    sendData('http://localhost:3001/send', body);\n  }\n\n  function callAPI() {\n    fetch('http://localhost:3001/mailerAPI')\n      .then( res => res.text())\n      .then( res => setAPI(res))\n  }\n\n  async function sendData(url, data) {\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: data\n    });\n  }\n\n  useEffect( _ => { callAPI() }, [APIResponse]);\n\n  return (\n      <form \n        method=\"POST\" \n        action=\"send\" \n        className=\"form\" \n        onSubmit={ e => validateForm(e) }\n        id=\"email-form\"\n        >\n        <div className=\"form__row\">\n          <div className=\"form__block\">\n            <h2 className=\"form__text--header\">\n              <span>From</span>\n            </h2>\n            <Input \n              id='sender_name'  \n              value={form.senderName}\n              action={setSenderNameAction} \n              type=\"text\" \n              placeholder='Name'\n            />\n            <Input \n              id='sender_email' \n              value={form.senderMail} \n              action={setSenderEmailAction} \n              type=\"email\" \n              placeholder=\"Email\" \n            />\n          </div>\n          <div className=\"form__block\">\n            <h2 className=\"form__text--header\">\n              <span>To</span>\n            </h2>\n            <Input \n              id='recipicient_name'  \n              value={form.recipicientName} \n              action={setRecipicientNameAction} \n              type=\"text\" \n              placeholder=\"Name\" \n            />\n            <Input \n              id='recipicient_email'  \n              value={form.recipicientMail} \n              action={setRecipicientEmailAction} \n              type=\"email\" \n              placeholder=\"Email\" \n            />\n          </div>\n        </div>\n\n        <div className=\"form__row\">\n          <Input \n            id='subject'  \n            value={form.subject} \n            action={setSubjectAction} \n            type=\"text\" \n            placeholder=\"Subject\" \n          />\n        </div>\n\n        <div className=\"form__row\">\n          <Textarea \n            id='message'  \n            value={form.message} \n            action={setMessageAction} \n            placeholder=\"Message\"\n          />\n        </div>\n\n        <div className=\"form__row\">\n          <AttachFile \n            id=\"attachments\" \n            maxSize={5} \n            maxCount={5} \n            formats={['.doc', '.docx', '.pdf']} \n            value={[]}\n            action={addFilesAction}\n          />\n          <Submit value=\"Send\"/>\n        </div>\n      </form>\n  )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Header = ({value}) => {\n  return(\n    <header data-test=\"header\" className=\"header\">\n      <h1 className=\"header__text\">{value}</h1>\n    </header>\n  )\n}\n\nHeader.propTypes = {\n  value: PropTypes.string\n}","import React from 'react';\n\nimport {Form} from './components/Form/Form';\nimport {Header} from './components/Header/Header';\n\nfunction App() {\n  return (\n    <main>\n      <Header value=\"Email Sender\" />\n      <Form />\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { applyMiddleware, createStore } from 'redux';\nimport { reducer } from './reducers';\nimport ReduxThunk from 'redux-thunk';\n\nexport const initialState = {\n  form: {\n    senderName: '',\n    senderMail: '',\n    recipicientName: '',\n    recipicientMail: '',\n    subject: '',\n    message: '',\n    files: []\n  }\n};\n\nexport const middlewares = [ ReduxThunk ];\n\nexport const store = createStore(\n  reducer,\n  initialState,\n  applyMiddleware(...middlewares),\n  //   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n) ","export const reducer = (state, { type, payload }) => {\n  \n  switch(type) {\n    case 'SET_SENDER_NAME': \n      return {\n        ...state,\n        form: { ...state.form, senderName: payload }\n      }\n      \n    case 'SET_SENDER_EMAIL': \n      return {\n        ...state,\n        form: { ...state.form, senderMail: payload }\n      }\n    \n    case 'SET_RECIPICIENT_NAME': \n      return {\n        ...state,\n        form: { ...state.form, recipicientName: payload }\n      }\n      \n    case 'SET_RECIPICIENT_EMAIL': \n      return {\n        ...state,\n        form: { ...state.form, recipicientMail: payload }\n      }\n    \n    case 'SET_SUBJECT': \n      return {\n        ...state,\n        form: { ...state.form, subject: payload }\n      }\n\n    case 'SET_MESSAGE': \n      return {\n        ...state,\n        form: { ...state.form, message: payload }\n      }\n\n    case 'ADD_FILES': \n      return {\n        ...state,\n        form: { ...state.form, files: payload }\n      }\n\n    default: \n      return {\n        ...state\n      }\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './scss/main.scss'; \n\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}